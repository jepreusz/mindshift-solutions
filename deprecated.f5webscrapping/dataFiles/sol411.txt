


TopicRunning the tcpdump utility	Selecting an Interface or VLANDisabling name resolution	Saving tcpdump output to a file	Binary fileText file	Reading tcpdump binary file outputFilters	Filtering on a host addressFiltering on a portFiltering on a tcp flagCombining filters with the and operator	Capturing packet dataSuppressing hostname and port resolutionCombining tcpdump optionsAdvanced tcpdump topicsThe tcpdump utility is a command line packet sniffer with many features and options. For a full description, refer to the tcpdump man pages by typing the following command:man tcpdumpRunning the tcpdump utilityFollowing are examples of commands used to run the tcpdump utility:Selecting an Interface or VLANThe tcpdump utility's interface or -i option accepts only one option. This option may be a numbered interface or a named Virtual Local Area Network (VLAN).To view traffic, use the -i flag as follows:tcpdump -i <option>For example:To view the traffic on a single specific interface:tcpdump -i 2.1To view the traffic on a specific VLAN called internal:tcpdump -i internalTo view the traffic on the management interface:tcpdump -i eth0To view the traffic on all interfaces:tcpdump -i 0.0Important: Running tcpdump on interface 0.0 is not rate-limited and has the potential to create very large files. F5 recommends this option only when using filters to limit the size of the capture. Review the Filters section prior to using this option.Note: Do not attempt to run tcpdump on an interface that contains a colon.For example:eth0:mgmtDisabling name resolutionBy default, tcpdump attempts to look up IP addresses and use names, rather than numbers, in the output. The BIG-IP system must wait for a response from the DNS server, so the lookups can be time consuming and the output may be confusing.To disable name resolution, use the -n flag as in the following examples:tcpdump -ntcpdump -ni internalSaving tcpdump output to a fileYou can save the tcpdump data to one of the following file formats:A binary file that contains all the information collected by the tcpdump and is readable by the tcpdump utility as well as many other traffic analysis packages.A text file that contains a subset of the full tcpdump data, but is readable only as plain text.When working with F5 Technical Support, you must provide the tcpdump output in the binary file format. For information about transferring the file output from an F5 system, refer to SOL175: Transferring files to or from an F5 system.Binary fileTo save the tcpdump output to a binary file, type the following command:tcpdump -w <filename>For example:tcpdump -w dump1.binNote: The tcpdump utility does not print data to the screen while it is capturing to a file. To stop the capture, press CTRL-C.Text fileTo save the tcpdump output to a text file, type the following command:tcpdump ><filename>For example:tcpdump >dump1.txtReading tcpdump binary file outputTo read data from a binary tcpdump file (that you saved by using the tcpdump -w command), type the following command:tcpdump -r <filename>For example:tcpdump -r dump1.binIn this mode, the tcpdump utility reads stored packets from the file, but otherwise operates just as it would if it were reading from the network interface. As a result, you can use formatting commands and filters.Beginning in BIG-IP 11.2.0-HF3, 11.2.1-HF3, and 11.3.0, a pseudo header which includes the following parameters is added to the start of each binary tcpdump capture:The tcpdump command syntax used, including all optionsVersion of softwareHostname of the systemPlatform IDProductFiltersThe tcpdump utility allows you to use filters to, among other things, restrict the output to specified addresses, ports, and tcp flags.Filtering on a host addressTo view all packets that are traveling to or from a specific IP address, type the following command:	tcpdump host <IP address>	For example:	tcpdump host 10.90.100.1	To view all packets that are traveling from a specific IP address, type the following command:	tcpdump src host <IP address>	For example:	tcpdump src host 10.90.100.1	To view all packets that are traveling to a particular IP address, type the following command:	tcpdump dst host <IP address>	For example:	tcpdump dst host 10.90.100.1	Filtering on a portTo view all packets that are traveling through the BIG-IP system and are either sourced from or destined to a specific port, type the following command:	tcpdump port <port number>	For example:	tcpdump port 80	To view all packets that are traveling through the BIG-IP system and sourced from a specific port, type the following command:	tcpdump src port<port number>	For example:	tcpdump src port 80	To view all packets that are traveling through the BIG-IP system and destined to a specific port, type the following command:	tcpdump dst port <port number>	For example:	tcpdump dst port 80	Filtering on a tcp flagTo view all packets that are traveling through the BIG-IP system that contain the SYN flag, type the following command:	tcpdump 'tcp[tcpflags] & (tcp-syn) != 0'	To view all packets that are traveling through the BIG-IP system that contain the RST flag, type the following command:	tcpdump 'tcp[tcpflags] & (tcp-rst) != 0'	Combining filters with the 'and' operatorYou can use the and operator to filter for a mixture of output.Following are some examples of useful combinations:tcpdump host 10.90.100.1 and port 80tcpdump src host 172.16.101.20 and dst port 80tcpdump src host 172.16.101.20 and dst host 10.90.100.1Capturing packet dataThe tcpdump utility provides an option that allows you to specify the amount of each packet to capture.You can use the -s (snarf/snaplen) option to specify the amount of each packet to capture. To capture the entire packet, use a value of 0 (zero).For example:tcpdump -s0 src host 172.16.101.20 and dst port 80Alternatively, you can specify a length large enough to capture the packet data you need to examine.For example:tcpdump -s200 src host 172.16.101.20 and dst port 80If you are using the tcpdump utility to examine the output on the console during capture or by reading from an input file with the -r option, you should also use the -X flag to display ASCII encoded output along with the default HEX encoded output.For example:tcpdump -r dump1.bin -X src host 172.16.101.20 and dst port 80Suppressing hostname and port resolutionThe tcpdump utility provides an option that allows you to specify whether IP addresses and service ports are translated to their corresponding hostnames and service names.Since performing multiple name lookups during a packet capture may be resource intensive, you should disable name resolution while capturing on a busy system using the -n option.For example:tcpdump -n src host 172.16.101.20 and dst port 80Service port lookups incur less overhead than DNS-based name resolutions, but still are usually unnecessary while performing a capture. You can disable both name and service port resolution while performing a capture, by using the -nn option.For example:tcpdump -nn src host 172.16.101.20 and dst port 80Combining tcpdump optionsThis article contains the most essential tcpdump options. You will generally need to use most of the options in combination.Following are examples of how to combine the tcpdump options to provide the most meaningful output:tcpdump -ni internal -w dump1.bintcpdump -n -r dump1.bin host 10.90.100.1tcpdump -ni 2.1 host 10.90.100.1 and port 80tcpdump -ni 1.10 src host 172.16.101.20 and dst port 80 >dump1.txttcpdump -Xs200 -nni eth0 -w /var/tmp/mgmt.cap dst host 172.16.101.20 and dst port 162Advanced tcpdump topicsThe following articles cover advanced tcpdump topics:SOL1893: Packet trace analysisSOL13637: Capturing internal TMM information with tcpdumpSOL7227: Considerations when using the tcpdump utility with tagged VLAN trafficSOL13328: Troubleshooting LDAP authentication with tcpdumpSOL13301: Overview of packet tracing a BIG-IP APM Network Access tunnel with the tcpdump utilitySOL7823: Troubleshooting and debugging Enterprise Manager iControl connectivitySOL5564: Saving large tcpdump packet traces when disk space is limitedSOL2289: Using advanced tcpdump filtersSupplemental InformationSOL6546: Recommended methods and limitations for running tcpdump on a BIG-IP systemSOL4714: Performing a packet trace and providing the results to F5 Technical SupportSOL10319: Using the tcpdump utility disables hardware checksum offloading




TopicRunning the tcpdump utility	Selecting an Interface or VLANDisabling name resolution	Saving tcpdump output to a file	Binary fileText file	Reading tcpdump binary file outputFilters	Filtering on a host addressFiltering on a portFiltering on a tcp flagCombining filters with the and operator	Capturing packet dataSuppressing hostname and port resolutionCombining tcpdump optionsAdvanced tcpdump topicsThe tcpdump utility is a command line packet sniffer with many features and options. For a full description, refer to the tcpdump man pages by typing the following command:man tcpdumpRunning the tcpdump utilityFollowing are examples of commands used to run the tcpdump utility:Selecting an Interface or VLANThe tcpdump utility's interface or -i option accepts only one option. This option may be a numbered interface or a named Virtual Local Area Network (VLAN).To view traffic, use the -i flag as follows:tcpdump -i <option>For example:To view the traffic on a single specific interface:tcpdump -i 2.1To view the traffic on a specific VLAN called internal:tcpdump -i internalTo view the traffic on the management interface:tcpdump -i eth0To view the traffic on all interfaces:tcpdump -i 0.0Important: Running tcpdump on interface 0.0 is not rate-limited and has the potential to create very large files. F5 recommends this option only when using filters to limit the size of the capture. Review the Filters section prior to using this option.Note: Do not attempt to run tcpdump on an interface that contains a colon.For example:eth0:mgmtDisabling name resolutionBy default, tcpdump attempts to look up IP addresses and use names, rather than numbers, in the output. The BIG-IP system must wait for a response from the DNS server, so the lookups can be time consuming and the output may be confusing.To disable name resolution, use the -n flag as in the following examples:tcpdump -ntcpdump -ni internalSaving tcpdump output to a fileYou can save the tcpdump data to one of the following file formats:A binary file that contains all the information collected by the tcpdump and is readable by the tcpdump utility as well as many other traffic analysis packages.A text file that contains a subset of the full tcpdump data, but is readable only as plain text.When working with F5 Technical Support, you must provide the tcpdump output in the binary file format. For information about transferring the file output from an F5 system, refer to SOL175: Transferring files to or from an F5 system.Binary fileTo save the tcpdump output to a binary file, type the following command:tcpdump -w <filename>For example:tcpdump -w dump1.binNote: The tcpdump utility does not print data to the screen while it is capturing to a file. To stop the capture, press CTRL-C.Text fileTo save the tcpdump output to a text file, type the following command:tcpdump ><filename>For example:tcpdump >dump1.txtReading tcpdump binary file outputTo read data from a binary tcpdump file (that you saved by using the tcpdump -w command), type the following command:tcpdump -r <filename>For example:tcpdump -r dump1.binIn this mode, the tcpdump utility reads stored packets from the file, but otherwise operates just as it would if it were reading from the network interface. As a result, you can use formatting commands and filters.Beginning in BIG-IP 11.2.0-HF3, 11.2.1-HF3, and 11.3.0, a pseudo header which includes the following parameters is added to the start of each binary tcpdump capture:The tcpdump command syntax used, including all optionsVersion of softwareHostname of the systemPlatform IDProductFiltersThe tcpdump utility allows you to use filters to, among other things, restrict the output to specified addresses, ports, and tcp flags.Filtering on a host addressTo view all packets that are traveling to or from a specific IP address, type the following command:	tcpdump host <IP address>	For example:	tcpdump host 10.90.100.1	To view all packets that are traveling from a specific IP address, type the following command:	tcpdump src host <IP address>	For example:	tcpdump src host 10.90.100.1	To view all packets that are traveling to a particular IP address, type the following command:	tcpdump dst host <IP address>	For example:	tcpdump dst host 10.90.100.1	Filtering on a portTo view all packets that are traveling through the BIG-IP system and are either sourced from or destined to a specific port, type the following command:	tcpdump port <port number>	For example:	tcpdump port 80	To view all packets that are traveling through the BIG-IP system and sourced from a specific port, type the following command:	tcpdump src port<port number>	For example:	tcpdump src port 80	To view all packets that are traveling through the BIG-IP system and destined to a specific port, type the following command:	tcpdump dst port <port number>	For example:	tcpdump dst port 80	Filtering on a tcp flagTo view all packets that are traveling through the BIG-IP system that contain the SYN flag, type the following command:	tcpdump 'tcp[tcpflags] & (tcp-syn) != 0'	To view all packets that are traveling through the BIG-IP system that contain the RST flag, type the following command:	tcpdump 'tcp[tcpflags] & (tcp-rst) != 0'	Combining filters with the 'and' operatorYou can use the and operator to filter for a mixture of output.Following are some examples of useful combinations:tcpdump host 10.90.100.1 and port 80tcpdump src host 172.16.101.20 and dst port 80tcpdump src host 172.16.101.20 and dst host 10.90.100.1Capturing packet dataThe tcpdump utility provides an option that allows you to specify the amount of each packet to capture.You can use the -s (snarf/snaplen) option to specify the amount of each packet to capture. To capture the entire packet, use a value of 0 (zero).For example:tcpdump -s0 src host 172.16.101.20 and dst port 80Alternatively, you can specify a length large enough to capture the packet data you need to examine.For example:tcpdump -s200 src host 172.16.101.20 and dst port 80If you are using the tcpdump utility to examine the output on the console during capture or by reading from an input file with the -r option, you should also use the -X flag to display ASCII encoded output along with the default HEX encoded output.For example:tcpdump -r dump1.bin -X src host 172.16.101.20 and dst port 80Suppressing hostname and port resolutionThe tcpdump utility provides an option that allows you to specify whether IP addresses and service ports are translated to their corresponding hostnames and service names.Since performing multiple name lookups during a packet capture may be resource intensive, you should disable name resolution while capturing on a busy system using the -n option.For example:tcpdump -n src host 172.16.101.20 and dst port 80Service port lookups incur less overhead than DNS-based name resolutions, but still are usually unnecessary while performing a capture. You can disable both name and service port resolution while performing a capture, by using the -nn option.For example:tcpdump -nn src host 172.16.101.20 and dst port 80Combining tcpdump optionsThis article contains the most essential tcpdump options. You will generally need to use most of the options in combination.Following are examples of how to combine the tcpdump options to provide the most meaningful output:tcpdump -ni internal -w dump1.bintcpdump -n -r dump1.bin host 10.90.100.1tcpdump -ni 2.1 host 10.90.100.1 and port 80tcpdump -ni 1.10 src host 172.16.101.20 and dst port 80 >dump1.txttcpdump -Xs200 -nni eth0 -w /var/tmp/mgmt.cap dst host 172.16.101.20 and dst port 162Advanced tcpdump topicsThe following articles cover advanced tcpdump topics:SOL1893: Packet trace analysisSOL13637: Capturing internal TMM information with tcpdumpSOL7227: Considerations when using the tcpdump utility with tagged VLAN trafficSOL13328: Troubleshooting LDAP authentication with tcpdumpSOL13301: Overview of packet tracing a BIG-IP APM Network Access tunnel with the tcpdump utilitySOL7823: Troubleshooting and debugging Enterprise Manager iControl connectivitySOL5564: Saving large tcpdump packet traces when disk space is limitedSOL2289: Using advanced tcpdump filtersSupplemental InformationSOL6546: Recommended methods and limitations for running tcpdump on a BIG-IP systemSOL4714: Performing a packet trace and providing the results to F5 Technical SupportSOL10319: Using the tcpdump utility disables hardware checksum offloading




TopicRunning the tcpdump utility	Selecting an Interface or VLANDisabling name resolution	Saving tcpdump output to a file	Binary fileText file	Reading tcpdump binary file outputFilters	Filtering on a host addressFiltering on a portFiltering on a tcp flagCombining filters with the and operator	Capturing packet dataSuppressing hostname and port resolutionCombining tcpdump optionsAdvanced tcpdump topicsThe tcpdump utility is a command line packet sniffer with many features and options. For a full description, refer to the tcpdump man pages by typing the following command:man tcpdumpRunning the tcpdump utilityFollowing are examples of commands used to run the tcpdump utility:Selecting an Interface or VLANThe tcpdump utility's interface or -i option accepts only one option. This option may be a numbered interface or a named Virtual Local Area Network (VLAN).To view traffic, use the -i flag as follows:tcpdump -i <option>For example:To view the traffic on a single specific interface:tcpdump -i 2.1To view the traffic on a specific VLAN called internal:tcpdump -i internalTo view the traffic on the management interface:tcpdump -i eth0To view the traffic on all interfaces:tcpdump -i 0.0Important: Running tcpdump on interface 0.0 is not rate-limited and has the potential to create very large files. F5 recommends this option only when using filters to limit the size of the capture. Review the Filters section prior to using this option.Note: Do not attempt to run tcpdump on an interface that contains a colon.For example:eth0:mgmtDisabling name resolutionBy default, tcpdump attempts to look up IP addresses and use names, rather than numbers, in the output. The BIG-IP system must wait for a response from the DNS server, so the lookups can be time consuming and the output may be confusing.To disable name resolution, use the -n flag as in the following examples:tcpdump -ntcpdump -ni internalSaving tcpdump output to a fileYou can save the tcpdump data to one of the following file formats:A binary file that contains all the information collected by the tcpdump and is readable by the tcpdump utility as well as many other traffic analysis packages.A text file that contains a subset of the full tcpdump data, but is readable only as plain text.When working with F5 Technical Support, you must provide the tcpdump output in the binary file format. For information about transferring the file output from an F5 system, refer to SOL175: Transferring files to or from an F5 system.Binary fileTo save the tcpdump output to a binary file, type the following command:tcpdump -w <filename>For example:tcpdump -w dump1.binNote: The tcpdump utility does not print data to the screen while it is capturing to a file. To stop the capture, press CTRL-C.Text fileTo save the tcpdump output to a text file, type the following command:tcpdump ><filename>For example:tcpdump >dump1.txtReading tcpdump binary file outputTo read data from a binary tcpdump file (that you saved by using the tcpdump -w command), type the following command:tcpdump -r <filename>For example:tcpdump -r dump1.binIn this mode, the tcpdump utility reads stored packets from the file, but otherwise operates just as it would if it were reading from the network interface. As a result, you can use formatting commands and filters.Beginning in BIG-IP 11.2.0-HF3, 11.2.1-HF3, and 11.3.0, a pseudo header which includes the following parameters is added to the start of each binary tcpdump capture:The tcpdump command syntax used, including all optionsVersion of softwareHostname of the systemPlatform IDProductFiltersThe tcpdump utility allows you to use filters to, among other things, restrict the output to specified addresses, ports, and tcp flags.Filtering on a host addressTo view all packets that are traveling to or from a specific IP address, type the following command:	tcpdump host <IP address>	For example:	tcpdump host 10.90.100.1	To view all packets that are traveling from a specific IP address, type the following command:	tcpdump src host <IP address>	For example:	tcpdump src host 10.90.100.1	To view all packets that are traveling to a particular IP address, type the following command:	tcpdump dst host <IP address>	For example:	tcpdump dst host 10.90.100.1	Filtering on a portTo view all packets that are traveling through the BIG-IP system and are either sourced from or destined to a specific port, type the following command:	tcpdump port <port number>	For example:	tcpdump port 80	To view all packets that are traveling through the BIG-IP system and sourced from a specific port, type the following command:	tcpdump src port<port number>	For example:	tcpdump src port 80	To view all packets that are traveling through the BIG-IP system and destined to a specific port, type the following command:	tcpdump dst port <port number>	For example:	tcpdump dst port 80	Filtering on a tcp flagTo view all packets that are traveling through the BIG-IP system that contain the SYN flag, type the following command:	tcpdump 'tcp[tcpflags] & (tcp-syn) != 0'	To view all packets that are traveling through the BIG-IP system that contain the RST flag, type the following command:	tcpdump 'tcp[tcpflags] & (tcp-rst) != 0'	Combining filters with the 'and' operatorYou can use the and operator to filter for a mixture of output.Following are some examples of useful combinations:tcpdump host 10.90.100.1 and port 80tcpdump src host 172.16.101.20 and dst port 80tcpdump src host 172.16.101.20 and dst host 10.90.100.1Capturing packet dataThe tcpdump utility provides an option that allows you to specify the amount of each packet to capture.You can use the -s (snarf/snaplen) option to specify the amount of each packet to capture. To capture the entire packet, use a value of 0 (zero).For example:tcpdump -s0 src host 172.16.101.20 and dst port 80Alternatively, you can specify a length large enough to capture the packet data you need to examine.For example:tcpdump -s200 src host 172.16.101.20 and dst port 80If you are using the tcpdump utility to examine the output on the console during capture or by reading from an input file with the -r option, you should also use the -X flag to display ASCII encoded output along with the default HEX encoded output.For example:tcpdump -r dump1.bin -X src host 172.16.101.20 and dst port 80Suppressing hostname and port resolutionThe tcpdump utility provides an option that allows you to specify whether IP addresses and service ports are translated to their corresponding hostnames and service names.Since performing multiple name lookups during a packet capture may be resource intensive, you should disable name resolution while capturing on a busy system using the -n option.For example:tcpdump -n src host 172.16.101.20 and dst port 80Service port lookups incur less overhead than DNS-based name resolutions, but still are usually unnecessary while performing a capture. You can disable both name and service port resolution while performing a capture, by using the -nn option.For example:tcpdump -nn src host 172.16.101.20 and dst port 80Combining tcpdump optionsThis article contains the most essential tcpdump options. You will generally need to use most of the options in combination.Following are examples of how to combine the tcpdump options to provide the most meaningful output:tcpdump -ni internal -w dump1.bintcpdump -n -r dump1.bin host 10.90.100.1tcpdump -ni 2.1 host 10.90.100.1 and port 80tcpdump -ni 1.10 src host 172.16.101.20 and dst port 80 >dump1.txttcpdump -Xs200 -nni eth0 -w /var/tmp/mgmt.cap dst host 172.16.101.20 and dst port 162Advanced tcpdump topicsThe following articles cover advanced tcpdump topics:SOL1893: Packet trace analysisSOL13637: Capturing internal TMM information with tcpdumpSOL7227: Considerations when using the tcpdump utility with tagged VLAN trafficSOL13328: Troubleshooting LDAP authentication with tcpdumpSOL13301: Overview of packet tracing a BIG-IP APM Network Access tunnel with the tcpdump utilitySOL7823: Troubleshooting and debugging Enterprise Manager iControl connectivitySOL5564: Saving large tcpdump packet traces when disk space is limitedSOL2289: Using advanced tcpdump filtersSupplemental InformationSOL6546: Recommended methods and limitations for running tcpdump on a BIG-IP systemSOL4714: Performing a packet trace and providing the results to F5 Technical SupportSOL10319: Using the tcpdump utility disables hardware checksum offloading

